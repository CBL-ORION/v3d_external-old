/* obsStub.h
   Generated by gSOAP 2.8.3 from obsModHeader.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef obsStub_H
#define obsStub_H
#include <vector>
#ifndef WITH_NOGLOBAL
#define WITH_NOGLOBAL
#endif
#include "../gsoap2/stdsoap2.h"

namespace obs {

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_obs_fw__ontologySelectedResponse
#define SOAP_TYPE_obs_fw__ontologySelectedResponse (8)
/* fw:ontologySelectedResponse */
struct fw__ontologySelectedResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_obs_fw__ontologySelected
#define SOAP_TYPE_obs_fw__ontologySelected (12)
/* fw:ontologySelected */
struct fw__ontologySelected
{
public:
	LONG64 rootId;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_obs_fw__ontologyChangedResponse
#define SOAP_TYPE_obs_fw__ontologyChangedResponse (13)
/* fw:ontologyChangedResponse */
struct fw__ontologyChangedResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_obs_fw__ontologyChanged
#define SOAP_TYPE_obs_fw__ontologyChanged (16)
/* fw:ontologyChanged */
struct fw__ontologyChanged
{
public:
	LONG64 rootId;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_obs_fw__entitySelectedResponse
#define SOAP_TYPE_obs_fw__entitySelectedResponse (17)
/* fw:entitySelectedResponse */
struct fw__entitySelectedResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_obs_fw__entitySelected
#define SOAP_TYPE_obs_fw__entitySelected (20)
/* fw:entitySelected */
struct fw__entitySelected
{
public:
	LONG64 entityId;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_obs_fw__entityViewRequestedResponse
#define SOAP_TYPE_obs_fw__entityViewRequestedResponse (21)
/* fw:entityViewRequestedResponse */
struct fw__entityViewRequestedResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_obs_fw__entityViewRequested
#define SOAP_TYPE_obs_fw__entityViewRequested (24)
/* fw:entityViewRequested */
struct fw__entityViewRequested
{
public:
	LONG64 entityId;	/* required element of type xsd:long */
};
#endif

#ifndef SOAP_TYPE_obs_fw__annotationsChangedResponse
#define SOAP_TYPE_obs_fw__annotationsChangedResponse (25)
/* fw:annotationsChangedResponse */
struct fw__annotationsChangedResponse
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_obs_fw__annotationsChanged
#define SOAP_TYPE_obs_fw__annotationsChanged (28)
/* fw:annotationsChanged */
struct fw__annotationsChanged
{
public:
	LONG64 entityId;	/* required element of type xsd:long */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_obs_SOAP_ENV__Header
#define SOAP_TYPE_obs_SOAP_ENV__Header (29)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_obs_SOAP_ENV__Code
#define SOAP_TYPE_obs_SOAP_ENV__Code (30)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_obs_SOAP_ENV__Detail
#define SOAP_TYPE_obs_SOAP_ENV__Detail (32)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_obs_SOAP_ENV__Reason
#define SOAP_TYPE_obs_SOAP_ENV__Reason (35)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_obs_SOAP_ENV__Fault
#define SOAP_TYPE_obs_SOAP_ENV__Fault (36)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE_obs__QName
#define SOAP_TYPE_obs__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_obs__XML
#define SOAP_TYPE_obs__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


} // namespace obs


#endif

/* End of obsStub.h */
